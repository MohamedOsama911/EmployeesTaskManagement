/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package etmswing;
import static etmswing.MainETM.empsList;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Collections;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author dell
 */
public class EditTask extends javax.swing.JFrame {

    int row=-1;
    private DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy-M-d");
    String TaskTitle, AssignDate, EndDate, Descrption, PriorityString;
    int Priority;
    boolean SameTitle = false, PriorityLimit = false, AssignAfterEnd = false, AssignBeforeNow = false;
    LocalDate LocalDateAssignDate, localDateEndDate;
    LocalDate now = LocalDate.now();
    /**
     * Creates new form EditTask
     */
    String Key;
    
   //Conustructor
    public EditTask(String passString) {
        initComponents();
        setResizable(false);
       // DefaultTableModel tblModel=(DefaultTableModel)Task_Table1.getModel();//propably no need
        
        Key = passString;
        Task_Table.getTableHeader().setFont(new Font("Franklin Gothlic Meduim Cond",Font.PLAIN,12));
        Task_Table.getTableHeader().setOpaque(false);
        Task_Table.getTableHeader().setBackground(new Color(51, 51, 51));
        Task_Table.getTableHeader().setForeground(new Color(204, 204, 204));
        DisplaySelected();//display the table function

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SaveChangesBtn = new javax.swing.JButton();
        TaskTitleLabl = new javax.swing.JLabel();
        TaskPriortyLabl = new javax.swing.JLabel();
        AssignedDateLabl = new javax.swing.JLabel();
        return_manager = new javax.swing.JButton();
        EndDateLabl = new javax.swing.JLabel();
        TaskDescriptionLabl = new javax.swing.JLabel();
        OuterPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Task_Table = new javax.swing.JTable();
        PriorityWarning_lbl = new javax.swing.JLabel();
        TitleDublicateWarning_lbl = new javax.swing.JLabel();
        EndDateWarning_lbl = new javax.swing.JLabel();
        DescriptionWarning_lbl = new javax.swing.JLabel();
        AssignDateWarning_lbl = new javax.swing.JLabel();
        taskTitle_logo = new javax.swing.JLabel();
        priority_logo = new javax.swing.JLabel();
        endDate_logo = new javax.swing.JLabel();
        description_logo = new javax.swing.JLabel();
        TaskTittle_fld = new javax.swing.JTextField();
        Priority_fld = new javax.swing.JTextField();
        AssignDate_fld = new javax.swing.JTextField();
        EndDate_fld = new javax.swing.JTextField();
        Description_fld = new javax.swing.JTextField();
        assignDate_logo = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1070, 600));
        setMinimumSize(new java.awt.Dimension(1070, 600));
        setPreferredSize(new java.awt.Dimension(1070, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SaveChangesBtn.setBackground(new java.awt.Color(51, 51, 51));
        SaveChangesBtn.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        SaveChangesBtn.setForeground(new java.awt.Color(204, 204, 204));
        SaveChangesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tick_ok.png"))); // NOI18N
        SaveChangesBtn.setText("Save Changes");
        SaveChangesBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        SaveChangesBtn.setFocusPainted(false);
        SaveChangesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SaveChangesBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SaveChangesBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SaveChangesBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SaveChangesBtnMouseReleased(evt);
            }
        });
        SaveChangesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChangesBtnActionPerformed(evt);
            }
        });
        getContentPane().add(SaveChangesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 180, 40));

        TaskTitleLabl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        TaskTitleLabl.setForeground(new java.awt.Color(204, 204, 204));
        TaskTitleLabl.setText("Task Title");
        getContentPane().add(TaskTitleLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 240, 30));

        TaskPriortyLabl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        TaskPriortyLabl.setForeground(new java.awt.Color(204, 204, 204));
        TaskPriortyLabl.setText("Task Priorty");
        getContentPane().add(TaskPriortyLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, 240, 30));

        AssignedDateLabl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        AssignedDateLabl.setForeground(new java.awt.Color(204, 204, 204));
        AssignedDateLabl.setText("Assigned Date");
        getContentPane().add(AssignedDateLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, 240, 30));

        return_manager.setBackground(new java.awt.Color(51, 51, 51));
        return_manager.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        return_manager.setForeground(new java.awt.Color(204, 204, 204));
        return_manager.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dashboard_24.png"))); // NOI18N
        return_manager.setText("Manager Dashboard");
        return_manager.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        return_manager.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        return_manager.setFocusPainted(false);
        return_manager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                return_managerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                return_managerMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                return_managerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                return_managerMouseReleased(evt);
            }
        });
        return_manager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_managerActionPerformed(evt);
            }
        });
        getContentPane().add(return_manager, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 510, 180, 40));

        EndDateLabl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        EndDateLabl.setForeground(new java.awt.Color(204, 204, 204));
        EndDateLabl.setText("End Date");
        getContentPane().add(EndDateLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 400, 240, 30));

        TaskDescriptionLabl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        TaskDescriptionLabl.setForeground(new java.awt.Color(204, 204, 204));
        TaskDescriptionLabl.setText("Task Description");
        getContentPane().add(TaskDescriptionLabl, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 240, 30));

        Task_Table.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        Task_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Title", "Priorty", "Assign date", "End date", "Discription"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Task_Table.setFillsViewportHeight(true);
        Task_Table.setFocusable(false);
        Task_Table.setGridColor(new java.awt.Color(51, 51, 51));
        Task_Table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        Task_Table.setRowHeight(25);
        Task_Table.setSelectionBackground(new java.awt.Color(102, 102, 102));
        Task_Table.setSelectionForeground(new java.awt.Color(204, 204, 204));
        Task_Table.setShowVerticalLines(false);
        Task_Table.getTableHeader().setReorderingAllowed(false);
        Task_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Task_TableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(Task_Table);
        if (Task_Table.getColumnModel().getColumnCount() > 0) {
            Task_Table.getColumnModel().getColumn(0).setMinWidth(150);
            Task_Table.getColumnModel().getColumn(0).setPreferredWidth(150);
            Task_Table.getColumnModel().getColumn(0).setMaxWidth(150);
            Task_Table.getColumnModel().getColumn(1).setMinWidth(100);
            Task_Table.getColumnModel().getColumn(1).setPreferredWidth(100);
            Task_Table.getColumnModel().getColumn(1).setMaxWidth(100);
            Task_Table.getColumnModel().getColumn(2).setMinWidth(100);
            Task_Table.getColumnModel().getColumn(2).setPreferredWidth(100);
            Task_Table.getColumnModel().getColumn(2).setMaxWidth(100);
            Task_Table.getColumnModel().getColumn(3).setMinWidth(100);
            Task_Table.getColumnModel().getColumn(3).setPreferredWidth(100);
            Task_Table.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        javax.swing.GroupLayout OuterPanelLayout = new javax.swing.GroupLayout(OuterPanel);
        OuterPanel.setLayout(OuterPanelLayout);
        OuterPanelLayout.setHorizontalGroup(
            OuterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        OuterPanelLayout.setVerticalGroup(
            OuterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OuterPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        getContentPane().add(OuterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 900, 210));

        PriorityWarning_lbl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        PriorityWarning_lbl.setForeground(new java.awt.Color(153, 0, 0));
        getContentPane().add(PriorityWarning_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 460, 240, 30));

        TitleDublicateWarning_lbl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        TitleDublicateWarning_lbl.setForeground(new java.awt.Color(153, 0, 0));
        TitleDublicateWarning_lbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(TitleDublicateWarning_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 240, 30));

        EndDateWarning_lbl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        EndDateWarning_lbl.setForeground(new java.awt.Color(153, 0, 0));
        getContentPane().add(EndDateWarning_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 460, 240, 30));

        DescriptionWarning_lbl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        DescriptionWarning_lbl.setForeground(new java.awt.Color(153, 0, 0));
        getContentPane().add(DescriptionWarning_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 550, 30));

        AssignDateWarning_lbl.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 14)); // NOI18N
        AssignDateWarning_lbl.setForeground(new java.awt.Color(153, 0, 0));
        getContentPane().add(AssignDateWarning_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 460, 240, 30));

        taskTitle_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30.png"))); // NOI18N
        getContentPane().add(taskTitle_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 40, 30));

        priority_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30.png"))); // NOI18N
        getContentPane().add(priority_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 430, 40, 30));

        endDate_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30.png"))); // NOI18N
        getContentPane().add(endDate_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 430, 40, 30));

        description_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        description_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document_30.png"))); // NOI18N
        getContentPane().add(description_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 340, 40, 30));

        TaskTittle_fld.setBackground(new java.awt.Color(80, 80, 80));
        TaskTittle_fld.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        TaskTittle_fld.setForeground(new java.awt.Color(204, 204, 204));
        TaskTittle_fld.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        TaskTittle_fld.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        TaskTittle_fld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaskTittle_fldActionPerformed(evt);
            }
        });
        getContentPane().add(TaskTittle_fld, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 240, 30));

        Priority_fld.setBackground(new java.awt.Color(80, 80, 80));
        Priority_fld.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        Priority_fld.setForeground(new java.awt.Color(204, 204, 204));
        Priority_fld.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        Priority_fld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Priority_fldActionPerformed(evt);
            }
        });
        getContentPane().add(Priority_fld, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 430, 240, 30));

        AssignDate_fld.setBackground(new java.awt.Color(80, 80, 80));
        AssignDate_fld.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        AssignDate_fld.setForeground(new java.awt.Color(204, 204, 204));
        AssignDate_fld.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        AssignDate_fld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignDate_fldActionPerformed(evt);
            }
        });
        getContentPane().add(AssignDate_fld, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, 240, 30));

        EndDate_fld.setBackground(new java.awt.Color(80, 80, 80));
        EndDate_fld.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        EndDate_fld.setForeground(new java.awt.Color(204, 204, 204));
        EndDate_fld.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        EndDate_fld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndDate_fldActionPerformed(evt);
            }
        });
        getContentPane().add(EndDate_fld, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 430, 240, 30));

        Description_fld.setBackground(new java.awt.Color(80, 80, 80));
        Description_fld.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 18)); // NOI18N
        Description_fld.setForeground(new java.awt.Color(204, 204, 204));
        Description_fld.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        Description_fld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Description_fldActionPerformed(evt);
            }
        });
        getContentPane().add(Description_fld, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, 550, 30));

        assignDate_logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30.png"))); // NOI18N
        getContentPane().add(assignDate_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 430, 40, 30));

        title.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 36)); // NOI18N
        title.setForeground(new java.awt.Color(204, 204, 204));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit_36.png"))); // NOI18N
        title.setText("Select a Task to Edit");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 470, 50));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/background.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(1070, 600));
        jLabel1.setMinimumSize(new java.awt.Dimension(1070, 600));
        jLabel1.setPreferredSize(new java.awt.Dimension(1070, 600));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void updateTaskFields()
    {
        empsList.get(Key).list.get(row).title=TaskTitle;
        empsList.get(Key).list.get(row).description=Descrption;
        empsList.get(Key).list.get(row).priority=Priority;
        empsList.get(Key).list.get(row).assignedDate=LocalDateAssignDate;
        empsList.get(Key).list.get(row).endDate=localDateEndDate;
        Collections.sort(empsList.get(Key).list);
    }
    
    
    
    
    //-------------------------------------------------------------------
    //add task funtion
    private void addTask() {
        //Task t = new Task(TaskTitle, Descrption, Priority, AssignDate, EndDate);
        //empsList.get(Key).updateTask(t , empsList.get(Key).list.get(row));
        updateTaskFields();
        updateTableCells();
        row = -1;
        
        taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30_confirm.png")));
        priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30_confirm.png")));
        assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
        endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
        description_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document_30_confirm.png")));
        showMessageDialog(this, "Task Updated Successfully","Process Succeeded", JOptionPane.OK_OPTION, new javax.swing.ImageIcon(getClass().getResource("/icons/tick_ok_30_confirm.png")));
        taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30.png")));
        priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30.png")));
        assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30.png")));
        endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30.png")));
        description_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document_30.png")));
        Description_fld.setText("");
        TaskTittle_fld.setText("");
        Priority_fld.setText("");
        AssignDate_fld.setText("");
        EndDate_fld.setText("");
        PriorityWarning_lbl.setText("");
        TitleDublicateWarning_lbl.setText("");
        DescriptionWarning_lbl.setText("");
        AssignDateWarning_lbl.setText("");
        EndDateWarning_lbl.setText("");
        SameTitle = false;
        AssignAfterEnd = false;
        PriorityLimit = false;
        AssignBeforeNow = false;
        //convert String to LocalDate
    }
    
    
    
    
    
    
    
    
    //------------------------------------------------------
    // Save changes button
    private void SaveChangesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChangesBtnActionPerformed
        if(row<0){  
            JOptionPane.showMessageDialog(this, "Select a Task to Edit","Error",JOptionPane.ERROR_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/icons/information_30.png")));
            return;
        }
        Descrption = Description_fld.getText(); //isn't that redundunt with line 279? and so on...
        TaskTitle = TaskTittle_fld.getText();
        PriorityString = Priority_fld.getText();
        AssignDate = AssignDate_fld.getText();
        EndDate = EndDate_fld.getText();

        PriorityWarning_lbl.setText("");
        TitleDublicateWarning_lbl.setText("");
        DescriptionWarning_lbl.setText("");
        AssignDateWarning_lbl.setText("");
        EndDateWarning_lbl.setText("");
        
        SameTitle = false;
        AssignAfterEnd = false;
        PriorityLimit = false;
        AssignBeforeNow = false;
        
        // check if any field is empty 
        if (Descrption.equals("") || TaskTitle.equals("") || PriorityString.equals("") || AssignDate.equals("") || EndDate.equals("")) {
            if (Descrption.equals("")) {
                DescriptionWarning_lbl.setText("Descrption Field is required");
                description_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document_30_decline.png")));
            }
            else
            {
                description_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document_30_confirm.png")));
            }
            if (TaskTitle.equals("")) {
                TitleDublicateWarning_lbl.setText("Task Title Field is required");
                taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30_decline.png")));
            }
            else
            {
                taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30.png")));
            }
            if (AssignDate.equals("")) {
                AssignDateWarning_lbl.setText("Assign Date Field is required");
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
            }
            else
            {
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30.png")));
            }
            if (EndDate.equals("")) {
                EndDateWarning_lbl.setText("End Date Field is required");
                endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
            }
            else
            {
                endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30.png")));
            }
            if (PriorityString.equals("")) {
                PriorityWarning_lbl.setText("Priority Field is required");
                priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30_decline.png")));
            }
            else
            {
                priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30.png")));
            }
            return;
        }
        //-----------------------------------------------------------------------------------------------------//
        int k = -1;
        try {
            Priority = Integer.parseInt(PriorityString);
            PriorityLimit = false;
            if (Priority > 10 || Priority < 1) {// Prioroty Checker between 1 to 10---> in case priority is integer 
                PriorityWarning_lbl.setText("Priority Should be Between 1 : 10");
                Priority_fld.setText("");
                PriorityLimit = true;
//                System.out.println("in priority check");
                priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30_decline.png")));
            }
            else
            {
                priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30_confirm.png")));
            }
            k = 0; // k = 0 if assign date  isn't  in date formate  
            LocalDateAssignDate = LocalDate.parse(AssignDate, dateFormat);
            AssignBeforeNow = false;
            if (LocalDateAssignDate.isBefore(now)) {
                AssignBeforeNow = true;
                showMessageDialog(this, "Assign Date Before Today's Date !", "Alert", WARNING_MESSAGE);
                AssignDate_fld.setText("");
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
            }
            else
            {
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
            }
            k = 1;
            localDateEndDate = LocalDate.parse(EndDate, dateFormat);
            AssignAfterEnd = false;
            if (LocalDateAssignDate.isAfter(localDateEndDate)) {//check if localDate >endDate.
                showMessageDialog(this, "Assign Date greater than End Date !", "Alert", WARNING_MESSAGE);
                AssignDate_fld.setText("");
                EndDate_fld.setText("");
                AssignAfterEnd = true;
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
            }
            else
            {
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
                endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
            }
            SameTitle = false;
            for (int i = 0; i < empsList.get(Key).list.size(); i++) {
                if (i == row) {
                    continue;
                }
                if (TaskTitle.equals(empsList.get(Key).list.get(i).title)) {
                    SameTitle = true; // check if the enterd task's title same as another task title.
                    break;
                }
            }
            //--------------------------------------------------------------------//
            if (SameTitle) {// check if entered task has the same title with another task
                showMessageDialog(this, "This Task Already Exist", "Alert", WARNING_MESSAGE);
                TaskTittle_fld.setText("");
                TitleDublicateWarning_lbl.setText("This Task is Already Exist");
                taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30_decline.png")));
            }
            else
            {
                taskTitle_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tag_left2_30_confirm.png")));
            }
            if (!(SameTitle || AssignAfterEnd || PriorityLimit || AssignBeforeNow)) {
                addTask();
            }
            // all above code in case all input correct  
            //-------------------------------------------------------------------------------//

            // in case priority not in a number format
        } catch (NumberFormatException e1) {
            Priority_fld.setText("");
            PriorityWarning_lbl.setText("Priority Must Be an Integer Number");
                priority_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/priority_30_decline.png")));
            ///start new try catch mode here
            try {
                k = 0;
                LocalDateAssignDate = LocalDate.parse(AssignDate, dateFormat);
                AssignBeforeNow = false;
                if (LocalDateAssignDate.isBefore(now)) {
                    AssignBeforeNow = true;
                    showMessageDialog(this, "Assign Date Before Today's Date !", "Alert", WARNING_MESSAGE);
                    AssignDate_fld.setText("");
                    assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                }
                else
                {
                    assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
                }
                k = 1;
                localDateEndDate = LocalDate.parse(EndDate, dateFormat);

                if (LocalDateAssignDate.isAfter(localDateEndDate)) {//check if localDate >endDate.
                    showMessageDialog(this, "Assign Date greater than End Date!", "Alert", WARNING_MESSAGE);
                    AssignDate_fld.setText("");
                    EndDate_fld.setText("");
                    assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                    endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                }
                else
                {
                    assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
                    endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_confirm.png")));
                }
            } catch (DateTimeParseException e2) {
                if (k == 0) {
                    AssignDateWarning_lbl.setText("Must Be in  Date Format (Year-Month-Day)");
                    AssignDate_fld.setText("");
                    assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                    try {
                        localDateEndDate = LocalDate.parse(EndDate, dateFormat);

                    } catch (DateTimeParseException e3) {
                        EndDateWarning_lbl.setText(" Must Be in  Date Format (Year-Month-Day) ");//here assign date and end date are fucked
                        EndDate_fld.setText("");
                        endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                    }
                } else {
                    EndDateWarning_lbl.setText(" Must Be in  Date Format (Year-Month-Day) ");//here end date are fucked
                    EndDate_fld.setText("");
                    endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                }
            }
        } catch (DateTimeParseException E) {
            if (k == 0) {
                AssignDateWarning_lbl.setText("Must Be in  Date Format (Year-Month-Day)");
                AssignDate_fld.setText("");
                assignDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                try {
                    localDateEndDate = LocalDate.parse(EndDate, dateFormat);
                } catch (DateTimeParseException e3) {
                    EndDateWarning_lbl.setText(" Must Be in  Date Format (Year-Month-Day) ");//here assign date and end date are fucked
                    EndDate_fld.setText("");
                    endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));
                }
            } else {
                EndDateWarning_lbl.setText(" Must Be in  Date Format (Year-Month-Day) ");//here end date are fucked
                EndDate_fld.setText("");
                endDate_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar_30_decline.png")));

            }
        }
    }//GEN-LAST:event_SaveChangesBtnActionPerformed

    
    private void AssignDate_fldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignDate_fldActionPerformed
        // TODO add your handling code here:
        AssignDate = AssignDate_fld.getText().toString();
    }//GEN-LAST:event_AssignDate_fldActionPerformed

    private void EndDate_fldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndDate_fldActionPerformed
        // TODO add your handling code here:
        EndDate = EndDate_fld.getText().toString();
    }//GEN-LAST:event_EndDate_fldActionPerformed

    private void Description_fldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Description_fldActionPerformed
        // TODO add your handling code here:
        Descrption = Description_fld.getText();
    }//GEN-LAST:event_Description_fldActionPerformed

    private void Task_TableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Task_TableMousePressed
        // TODO add your handling code here:
        selectedTask();
    }//GEN-LAST:event_Task_TableMousePressed

    private void TaskTittle_fldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaskTittle_fldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaskTittle_fldActionPerformed

    private void Priority_fldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Priority_fldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Priority_fldActionPerformed

    private void return_managerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_return_managerMouseEntered
        setHoverColor(return_manager);
        managerBtn_over = true;
    }//GEN-LAST:event_return_managerMouseEntered

    private void return_managerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_return_managerMouseExited
        setResetColor(return_manager);
        managerBtn_over = false;
    }//GEN-LAST:event_return_managerMouseExited

    private void return_managerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_return_managerMousePressed
        setPressColor(return_manager);
    }//GEN-LAST:event_return_managerMousePressed

    private void return_managerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_return_managerMouseReleased
        if (managerBtn_over) {
            setHoverColor(return_manager);
        } else {
            setResetColor(return_manager);
        }
    }//GEN-LAST:event_return_managerMouseReleased

    private void return_managerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_managerActionPerformed
        ManagerForm managerForm = new ManagerForm();
        managerForm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_return_managerActionPerformed

    private void SaveChangesBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveChangesBtnMouseEntered
        setHoverColorConfirm(SaveChangesBtn);
        saveBtn_over = true;
    }//GEN-LAST:event_SaveChangesBtnMouseEntered

    private void SaveChangesBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveChangesBtnMouseExited
        setResetColor(SaveChangesBtn);
        saveBtn_over = false;
    }//GEN-LAST:event_SaveChangesBtnMouseExited

    private void SaveChangesBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveChangesBtnMousePressed
        setPressColor(SaveChangesBtn);
    }//GEN-LAST:event_SaveChangesBtnMousePressed

    private void SaveChangesBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveChangesBtnMouseReleased
        if (saveBtn_over) {
            setHoverColorConfirm(SaveChangesBtn);
        } else {
            setResetColor(SaveChangesBtn);
        }
    }//GEN-LAST:event_SaveChangesBtnMouseReleased

    
    private void setPressColor(javax.swing.JButton b) {
        b.setBackground(new Color(153, 153, 153));
    }
    private void setHoverColor(javax.swing.JButton b) {
        b.setBackground(new Color(102, 102, 102));
    }
    private void setResetColor(javax.swing.JButton b) {
        b.setBackground(new Color(51, 51, 51));
    }
    
    private void setHoverColorConfirm(javax.swing.JButton b) {
        b.setBackground(new Color(0,153,0));
    }
    private void setHoverColorDecline(javax.swing.JButton b) {
        b.setBackground(new Color(153,0,0));
    }
    private boolean managerBtn_over;
    private boolean saveBtn_over;
    
    //Display all tasks in the table ------------------ sure 100%
    private  void DisplaySelected(){
               
        DefaultTableModel tblModel=(DefaultTableModel)Task_Table.getModel();
            for (int i = 0; i < empsList.get(Key).list.size(); i++) {
                String[] displayEmployeesData={empsList.get(Key).list.get(i).title,
                    Integer.toString(empsList.get(Key).list.get(i).priority),
                    empsList.get(Key).list.get(i).assignedDate.toString(),
                    empsList.get(Key).list.get(i).endDate.toString(),
                    empsList.get(Key).list.get(i).description};

                tblModel.addRow(displayEmployeesData);
                
            } 
    }
    
     
    
    
    //Display selected task in the txt fields
    private void selectedTask() {                                  
        // TODO add your handling code here:
         OuterPanel.setVisible(true);
         
         row= Task_Table.getSelectedRow();

         //set the fields with the 
         TaskTittle_fld.setText( Task_Table.getModel().getValueAt(row, 0).toString());
         Priority_fld.setText( Task_Table.getModel().getValueAt(row, 1).toString());
         AssignDate_fld.setText( Task_Table.getModel().getValueAt(row, 2).toString());
         EndDate_fld.setText( Task_Table.getModel().getValueAt(row, 3).toString());
//         System.out.println("EndDate_fld At selecting : " + Task_Table.getModel().getValueAt(row, 3).toString());
         Description_fld.setText( Task_Table.getModel().getValueAt(row, 4).toString());
         
    }                      
    
    ///////
    private void updateTableCells() {                                  
        // TODO add your handling code here:
         OuterPanel.setVisible(true);
         
         row= Task_Table.getSelectedRow();
         TaskTitle= Task_Table.getModel().getValueAt(row, 0).toString();//Get the Selected EMP Email

         //set the fields with the 
         Task_Table.setValueAt(TaskTittle_fld.getText(), row, 0);
         Task_Table.setValueAt(Priority_fld.getText(), row, 1);
         Task_Table.setValueAt(AssignDate_fld.getText(), row, 2);
         Task_Table.setValueAt(EndDate_fld.getText(), row, 3);
         Task_Table.setValueAt(Description_fld.getText(), row, 4);
    }  
    
    
    
    
    ///////
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditTask(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AssignDateWarning_lbl;
    private javax.swing.JTextField AssignDate_fld;
    private javax.swing.JLabel AssignedDateLabl;
    private javax.swing.JLabel DescriptionWarning_lbl;
    private javax.swing.JTextField Description_fld;
    private javax.swing.JLabel EndDateLabl;
    private javax.swing.JLabel EndDateWarning_lbl;
    private javax.swing.JTextField EndDate_fld;
    private javax.swing.JPanel OuterPanel;
    private javax.swing.JLabel PriorityWarning_lbl;
    private javax.swing.JTextField Priority_fld;
    private javax.swing.JButton SaveChangesBtn;
    private javax.swing.JLabel TaskDescriptionLabl;
    private javax.swing.JLabel TaskPriortyLabl;
    private javax.swing.JLabel TaskTitleLabl;
    private javax.swing.JTextField TaskTittle_fld;
    private javax.swing.JTable Task_Table;
    private javax.swing.JLabel TitleDublicateWarning_lbl;
    private javax.swing.JLabel assignDate_logo;
    private javax.swing.JLabel description_logo;
    private javax.swing.JLabel endDate_logo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel priority_logo;
    private javax.swing.JButton return_manager;
    private javax.swing.JLabel taskTitle_logo;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
